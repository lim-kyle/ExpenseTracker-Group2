@model ASI.Basecode.Data.Models.Expense
@inject ASI.Basecode.Data.Interfaces.ICategoryRepository CategoryRepository
@inject ASI.Basecode.Data.Interfaces.IExpenseRepository ExpenseRepository

@{
    ViewData["Title"] = "Expense Management";
    var userId = User.Claims.FirstOrDefault(c => c.Type == "UserId")?.Value;
    var categories = CategoryRepository.GetCategoriesByUserId(int.Parse(userId)).ToList();

    var expenses = await ExpenseRepository.GetExpensesAsyncByUserId(int.Parse(userId));
    var errors = TempData["Errors"] as Dictionary<string, List<string>>;
}
@section modals {

    <div id="modal" class="absolute w-full h-full bg-black z-50  @(errors == null ? " hidden" : "flex " ) flex-row items-center justify-center bg-opacity-20">
        <form asp-action="AddExpenses" method="post" class="bg-white  p-4 rounded-xl ">
            <h1 class="text-lg text-gray-700 font-bold mb-5 text-center">Add Expense</h1>
            <div class="flex  flex-col ">
                <label for="ExpenseTitle" class="text-gray-750 uppercase text-sm">Expense Title</label>
                <input class="outline-none bg-slate-100 p-1 rounded-lg" type="text" id="ExpenseTitle" name="ExpenseTitle"  maxlength="100" />
                @if (errors != null && errors.ContainsKey("ExpenseTitle"))
                {
                    <div class="alert alert-danger">
                        @foreach (var error in errors["ExpenseTitle"])
                        {
                            <p>@error</p>
                        }
                    </div>
                }
                      
            </div>

            <div class="flex  flex-col">
                <label for="CategoryId" class="form-label">Category</label>
                <select class="outline-none bg-slate-100 p-1 rounded-lg" id="CategoryId" name="CategoryId" required>
                    <option value="">Select a category</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="CategoryId"></span>
            </div>

            <div class="flex  flex-col">
                <label for="Amount" class="form-label">Amount</label>
                <input type="number" class="p-1 outline-none rounded-lg bg-slate-100 " id="Amount" name="Amount" required step="0.01" min="0" />
                <span asp-validation-for="Amount"></span>

            </div>

            <div class="d-flex justify-content-end mt-5">
                <button type="submit" class="bg-red-500 p-2  text-white rounded-xl">Add Expense</button>
                <a id="close" class="bg-blue-500 p-2 text-white rounded-xl">Cancel</a>
            </div>
        </form>
    </div>
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4 pb-4 border-b border-gray-300">
        <h1 class="text-2xl font-bold text-gray-800">@ViewData["Title"]</h1>
     
    </div>
    <div class="flex flex-row justify-between">
     <div >
        <div class="flex flex-row items-center gap-1">
            <span class="text-gray-700">Sort By: </span>
                <select class="bg-white p-2 border border-gray-200 rounded-xl">
                    <option>Categories</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>

                <input type="date" class="p-1  border border-gray-200 rounded-xl" />
                <input type="button"  value="Filter" class="p-1 px-4 bg-purple-500 text-white rounded-xl" />
        </div>
     </div>
        <a id="buttonAdd" class="bg-red-500 p-2 rounded-xl text-white text-sm">
            <i class="fas fa-plus"></i> Add Expense
        </a>
 </div>
    <div class="">
     
        <div class="mt-5">
            <table class=" w-full">
                <thead class="table-light border-collapse border-y border-slate-200">
                    <tr>
                        <th class="text-md text-gray-700 text-center font-medium bg-slate-50 p-2">Title</th>
                        <th class="text-md text-gray-700 text-center font-medium bg-slate-50 p-2">Category</th>
                        <th class="text-md text-gray-700 text-center font-medium bg-slate-50 p-2">Amount</th>
                        <th class="text-md text-gray-700 text-center font-medium bg-slate-50 p-2">Date Created</th>
                        <th class="text-md text-gray-700 text-center font-medium bg-slate-50 p-2">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (expenses.Count > 0)
                    {
                        foreach (var expense in expenses)
                        {
                            <tr class="border-b border-gray-200 p-3">
                                <td class="text-center p-2 bg-slate-50">@expense.ExpenseTitle</td>
                                <td class="text-center p-2 bg-slate-50">@expense.Category?.Name</td>
                                <td class="text-center p-2 bg-slate-50">@expense.Amount.ToString("C", new System.Globalization.CultureInfo("en-PH"))</td>
                                <td class="text-center p-2 bg-slate-50">@expense.DateCreated.ToShortDateString()</td>
                                <td class="text-center p-2 bg-slate-50">
                                    <a href="@Url.Action("UpdateExpenses", "Expense", new { id = expense.Id })" class="text-blue-500 hover:text-blue-700">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("DeleteConfirmed", "Expense", new { id = expense.Id })" class="text-red-500 hover:text-red-700 ml-2">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                 
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center">No expenses found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section scripts  {
    <script>
        const modal = document.getElementById('modal');
        const add = document.getElementById('buttonAdd');
        const close = document.getElementById('close');

        add.addEventListener('click', () => {
            modal.style.display = 'flex';
        });
        close.addEventListener('click', () => {
            modal.style.display = 'none';
        });
    </script>
}