@model IEnumerable<ASI.Basecode.Data.Models.Category>

@{
    ViewData["Title"] = "Category Management";
}

@section modals {
    <div id="modal" class="fixed inset-0 bg-black/40 backdrop-blur-sm z-50 hidden items-center justify-center">
        <form asp-action="AddCategory" method="post" class="bg-white dark:bg-gray-800 rounded-2xl p-8 md:p-12 w-11/12 max-w-2xl shadow-2xl">
            <div class="space-y-6">
                <div class="text-center space-y-3">
                    <h1 class="text-3xl text-gray-800 dark:text-white font-bold">Add New Category</h1>
                    <p class="text-gray-600 dark:text-gray-400 text-lg">Create a new category to organize your expenses</p>
                    <div class="w-20 h-1 bg-blue-500 mx-auto rounded-full"></div>
                </div>
                
                <div class="space-y-2">
                    <label for="Name" class="text-gray-700 dark:text-gray-300 font-medium block">Category Name</label>
                    <input type="text" 
                           class="w-full outline-none bg-gray-50 dark:bg-gray-700 p-3 rounded-xl border border-gray-200 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-400 focus:ring-2 focus:ring-blue-200 dark:focus:ring-blue-800 transition-all duration-200 dark:text-white"
                           id="Name" 
                           name="Name" 
                           required 
                           maxlength="50" 
                           placeholder="e.g. Groceries, Transportation" />
                    <p class="text-sm text-gray-500 dark:text-gray-400">Choose a clear and concise name for your category (max 50 characters)</p>
                </div>

                <div class="flex justify-end gap-3 pt-6 border-t border-gray-100 dark:border-gray-700">
                    <a id="close" class="px-6 py-3 text-gray-700 bg-gray-100 rounded-xl cursor-pointer hover:bg-gray-200 transition-all duration-200">
                        Cancel
                    </a>
                    <button type="submit" class="px-6 py-3 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-all duration-200">
                        <i class="fas fa-plus mr-2"></i> Create Category
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="fixed inset-0 bg-black/40 backdrop-blur-sm z-50 hidden items-center justify-center">
        <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 w-11/12 max-w-md shadow-2xl">
            <div class="space-y-6">
                <div class="text-center space-y-3">
                    <h2 class="text-2xl text-gray-800 dark:text-white font-bold">Confirm Deletion</h2>
                    <p class="text-gray-600 dark:text-gray-300">Are you sure you want to delete this category? This will also delete all associated expenses.</p>
                </div>
                <div class="flex justify-end gap-3 pt-6 border-t border-gray-100 dark:border-gray-600">
                    <button id="cancelDelete" class="px-6 py-3 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-xl hover:bg-gray-200 dark:hover:bg-gray-600 transition-all duration-200">
                        Cancel
                    </button>
                    <button id="confirmDelete" class="px-6 py-3 bg-red-500 text-white rounded-xl hover:bg-red-600 transition-all duration-200">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<div class="container max-w-6xl  px-4 py-8">
    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb" class="mb-8">
        <ol class="flex items-center space-x-2">
            <li class="flex items-center">
                <a href="@Url.Action("Index", "Home")" class="text-gray-500 hover:text-blue-500 transition-colors duration-200">
                    <i class="fas fa-home text-sm"></i>
                    <span class="ml-1">Home</span>
                </a>
            </li>
            <li class="flex items-center">
                <i class="fas fa-chevron-right text-gray-400 text-sm mx-2"></i>
                <span class="text-gray-400">
                    <i class="fas fa-folder text-sm"></i>
                    <span class="ml-1">Categories</span>
                </span>
            </li>
        </ol>
    </nav>

    <!-- Header -->
    <div class="mb-8">
        <div class="flex justify-between items-center mb-4">
            <div>
                <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">@ViewData["Title"]</h1>
                <p class="text-gray-600 dark:text-gray-400">Organize your expenses by creating and managing categories</p>
            </div>
            <button id="buttonAdd" 
                    class="bg-blue-500 px-4 py-2 rounded-xl text-white hover:bg-blue-600 transition-all duration-200 flex items-center gap-2">
                <i class="fas fa-plus"></i>
                <span>Add Category</span>
            </button>
        </div>
        <div class="w-20 h-1 bg-blue-500 rounded-full"></div>
    </div>

    <!-- Search Bar -->
    <div class="bg-white dark:bg-gray-800 rounded-2xl p-6 mb-8 shadow-sm border border-gray-100 dark:border-gray-700">
        <div class="flex items-center gap-4">
            <div class="flex-1">
                <label for="searchCategory" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Search Categories</label>
                <input type="text" 
                       id="searchCategory" 
                       class="w-full bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl px-4 py-2.5 dark:text-white"
                       placeholder="Search by category name...">
            </div>
        </div>
    </div>

    <!-- Categories Grid -->
    <div id="categoriesGrid" class="grid grid-cols-1 md:grid-cols-3 gap-6">
        @if (Model != null && Model.Any())
        {
            foreach (var category in Model)
            {
                <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-sm border border-gray-100 dark:border-gray-700 p-6 hover:shadow-md transition-all duration-200">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-xl font-semibold text-gray-800 dark:text-white">@category.Name</h3>
                        <span class="text-blue-500 bg-blue-50 dark:bg-blue-900/30 p-2 rounded-lg">
                            <i class="fas fa-folder text-lg"></i>
                        </span>
                    </div>
                    <div class="flex gap-3">
                        <a href="@Url.Action("UpdateCategory", "Category", new { id = category.Id })" 
                           class="flex-1 px-4 py-2 text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/30 rounded-xl hover:bg-blue-100 dark:hover:bg-blue-900/50 transition-all duration-200 flex items-center justify-center gap-2">
                            <i class="fas fa-edit"></i>
                            <span>Edit</span>
                        </a>
                        <button onclick="showDeleteConfirmation(@category.Id)" 
                                class="flex-1 px-4 py-2 text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/30 rounded-xl hover:bg-red-100 dark:hover:bg-red-900/50 transition-all duration-200 flex items-center justify-center gap-2">
                            <i class="fas fa-trash"></i>
                            <span>Delete</span>
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-span-full text-center py-12">
                <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-700 mb-4">
                    <i class="fas fa-folder-open text-2xl text-gray-400 dark:text-gray-500"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Categories Found</h3>
                <p class="text-gray-500 dark:text-gray-400 mb-6">Get started by creating your first category</p>
                <button id="buttonAddFirst" 
                        class="inline-flex items-center gap-2 bg-blue-500 text-white px-6 py-3 rounded-xl hover:bg-blue-600 transition-all duration-200">
                    <i class="fas fa-plus"></i>
                    <span>Add Your First Category</span>
                </button>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        // Modal functionality
        const modal = document.getElementById('modal');
        const add = document.getElementById('buttonAdd');
        const addFirst = document.getElementById('buttonAddFirst');
        const close = document.getElementById('close');
        
        // Get all category cards
        const categories = Array.from(document.querySelectorAll('#categoriesGrid > div')).filter(
            div => !div.querySelector('.text-center')  // Exclude the "No Categories Found" message
        );
        const noResultsMessage = `
            <div class="col-span-full text-center py-12">
                <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-700 mb-4">
                    <i class="fas fa-search text-2xl text-gray-400 dark:text-gray-500"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Categories Found</h3>
                <p class="text-gray-500 dark:text-gray-400">Try adjusting your search term</p>
            </div>
        `;

        // Search functionality
        const searchCategory = document.getElementById('searchCategory');
        
        function filterCategories(searchTerm) {
            const grid = document.getElementById('categoriesGrid');
            const filtered = categories.filter(card => {
                const categoryName = card.querySelector('h3').textContent.toLowerCase();
                return categoryName.includes(searchTerm.toLowerCase());
            });

            // Clear the grid
            grid.innerHTML = '';

            if (filtered.length > 0) {
                filtered.forEach(card => grid.appendChild(card.cloneNode(true)));
            } else {
                grid.innerHTML = noResultsMessage;
            }
        }

        searchCategory.addEventListener('input', (e) => filterCategories(e.target.value));

        // Existing modal code
        const showModal = () => {
            modal.style.display = 'flex';
        };

        add?.addEventListener('click', showModal);
        addFirst?.addEventListener('click', showModal);
        close?.addEventListener('click', () => {
            modal.style.display = 'none';
        });

        // Delete confirmation modal functionality
        const deleteModal = document.getElementById('deleteModal');
        let categoryIdToDelete = null;

        function showDeleteConfirmation(id) {
            categoryIdToDelete = id;
            deleteModal.classList.remove('hidden');
            deleteModal.classList.add('flex');
        }

        document.getElementById('cancelDelete').addEventListener('click', () => {
            deleteModal.classList.remove('flex');
            deleteModal.classList.add('hidden');
            categoryIdToDelete = null;
        });

        document.getElementById('confirmDelete').addEventListener('click', () => {
            if (categoryIdToDelete) {
                window.location.href = `/Category/DeleteCategory?id=${categoryIdToDelete}`;
            }
        });

        var errorMessage = '@TempData["ErrorMessage"]';
        var Success = '@TempData["Success"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
        if (Success) {
            toastr.success(Success);
        }
    </script>
}

  

